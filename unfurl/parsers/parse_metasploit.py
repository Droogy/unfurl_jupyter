# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import re

uuid_edge = {
    'color': {
        'color': 'red'
    },
    'title': 'Metasploit Parsing Functions',
    'label': 'M'
}

# Metasploit 8-bit checksums
#  URI_CHECKSUM_INITW = 92  # Windows
#  URI_CHECKSUM_INITN = 92  # Native (same as Windows)
#  URI_CHECKSUM_INITP = 80  # Python
#  URI_CHECKSUM_INITJ = 88  # Java
#  URI_CHECKSUM_CONN = 98  # Existing session
#  URI_CHECKSUM_INIT_CONN = 95  # New stageless session
# Reference: https://github.com/rapid7/metasploit-framework/blob/master/lib/rex/payloads/meterpreter/uri_checksum.rb

metasploit_checksums = {
    80: 'Python',
    88: 'Java',
    92: 'Windows',
    95: 'New stageless session',
    98: 'Existing session'
}


def run(unfurl, node):
    if node.data_type == 'url.path' and len(node.value) == 5:
        checksum = sum(map(ord, node.value[1:])) % 0x100
        metasploit_checksum = metasploit_checksums.get(checksum)

        if not metasploit_checksum:
            return

        unfurl.add_to_queue(
            data_type='descriptor', key=None, value=None, label=f'Matches Metasploit URL checksum for {metasploit_checksum}',
            hover='Shellcode URLs generated by Metasploit and Cobalt Strike have a path <br>'
                  'of four characters and are validated by a checksum. This URL path fits <br>'
                  f'the pattern and the checksum code matches <b>{metasploit_checksum}</b>. However, <br>'
                  f'the checksum is short (8-bits) and <b>this could be a false positive</b>.',
            parent_id=node.node_id, incoming_edge_config=uuid_edge)

